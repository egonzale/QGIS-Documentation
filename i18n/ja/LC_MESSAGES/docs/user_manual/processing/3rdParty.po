# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# 
# Translators:
# Choro <u.ko.kubot@gmail.com>, 2013-2014
# OKANO Takayoshi <kano@na.rim.or.jp>, 2014
# taka648 <taka648@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-26 14:10\n"
"PO-Revision-Date: 2014-06-22 17:14+0000\n"
"Last-Translator: OKANO Takayoshi <kano@na.rim.or.jp>\n"
"Language-Team: Japanese (http://www.transifex.com/projects/p/qgis-documentation/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# dedf792b19634c82b2c4032119e8102f
#: ../../source/docs/user_manual/processing/3rdParty.rst:10
msgid "Configuring external applications"
msgstr "外部アプリケーションの設定"

# c04c7d7f360549f59ab0a18c3ebbb7d1
#: ../../source/docs/user_manual/processing/3rdParty.rst:39
msgid "A note for Windows users"
msgstr "Windowsユーザへの注意点"

# 162302bebd274b9baab43e46c069b399
#: ../../source/docs/user_manual/processing/3rdParty.rst:53
msgid "A note on file formats"
msgstr "ファイルフォーマットに関する注意点"

# 42c4e97852fa42b7811ac74c2f162de6
#: ../../source/docs/user_manual/processing/3rdParty.rst:63
msgid ""
"Using GRASS raster layers is, for instance, one case in which you might have"
" trouble and not be able to complete your work if you call an external "
"algorithm using such a layer as input. For this reason, these layers will "
"not appear as available to algorithms."
msgstr "もし、あなたがレイヤを入力するのに使用する外部アルゴリズムを呼び出したときに、この処理でトラブルが起こったり処理が終了しなかった場合は、GRASSラスタレイヤを使用してください。このため、これらのレイヤは利用可能なアルゴリズムとして表示されません。"

# 0459a3b57109488db4bf307d63eb66d5
#: ../../source/docs/user_manual/processing/3rdParty.rst:90
msgid "A note on vector layer selections"
msgstr "ベクトル・レイヤ選択に関する注意点"

# ef3f78e7e6f644e6b38717891d216eaa
#: ../../source/docs/user_manual/processing/3rdParty.rst:99
msgid ""
"In other cases, exporting only selected features is needed, which causes "
"execution times to be longer."
msgstr "ほかの場合では、選択したフィーチャのみをエクスポートするには長い実行時間を必要とします。"

# b032f3d23b964687b2b8148dc8dc32e7
#: ../../source/docs/user_manual/processing/3rdParty.rst:103
msgid "SAGA"
msgstr "SAGA: System for Automated Geoscientific Analyses、自動化地球科学的分析システム"

# fcc4c015a4264fef99aa60ff19f715a6
#: ../../source/docs/user_manual/processing/3rdParty.rst:133
msgid "About SAGA grid system limitations"
msgstr "SAGAグリッドシステムの制限について"

# e00c2838fef94e9d89f2dc9e30cda597
#: ../../source/docs/user_manual/processing/3rdParty.rst:150
msgid ":guilabel:`Resampling min X`"
msgstr ":guilabel:`Resampling min X`"

# 595cce41f54741e0921cea90004911a9
#: ../../source/docs/user_manual/processing/3rdParty.rst:151
msgid ":guilabel:`Resampling max X`"
msgstr ":guilabel:`Resampling max X`"

# 6f804106a0e24dc6a44648b266a4eba7
#: ../../source/docs/user_manual/processing/3rdParty.rst:152
msgid ":guilabel:`Resampling min Y`"
msgstr ":guilabel:`Resampling min Y`"

# 743abc94f34c4ef6b88a0f43cf9a8c0f
#: ../../source/docs/user_manual/processing/3rdParty.rst:153
msgid ":guilabel:`Resampling max Y`"
msgstr ":guilabel:`Resampling max Y`"

# 8dbbf7fb813a4370a0fd75def9c8c3c7
#: ../../source/docs/user_manual/processing/3rdParty.rst:154
msgid ":guilabel:`Resampling cellsize`"
msgstr ":guilabel:`Resampling cellsize`"

# 0c3cd72f27e34d6ca6d700b164e7faa1
#: ../../source/docs/user_manual/processing/3rdParty.rst:164
msgid ""
"For algorithms that do not use multiple raster layers, or for those that do "
"not need a unique input grid system, no resampling is performed before "
"calling SAGA, and those parameters are not used."
msgstr "多重ラスタレイヤを使用しないあるいは固有の入力グリッドシステムを必要としないアルゴリズムでは、SAGAを呼び出す前にリサンプリングは実行されませんし、これらのパラメータは使用されません。"

# 02ca9cb55caf42e29f5e78074762159a
#: ../../source/docs/user_manual/processing/3rdParty.rst:169
msgid "Limitations for multi-band layers"
msgstr "マルチバンドレイヤに関する制限"

# 8c6696f90fa448e8a5de482837c99b71
#: ../../source/docs/user_manual/processing/3rdParty.rst:187
msgid "Logging"
msgstr "Logging"

# 8e22b7548d9c4109877c7d3f585d0889
#: ../../source/docs/user_manual/processing/3rdParty.rst:202
msgid ""
"Most other providers that use an external application and call it through "
"the command-line have similar options, so you will find them as well in "
"other places in the processing settings list."
msgstr "コマンドラインから外部アプリケーションを使ったり呼び込んだりするようなほとんどのほかのプロバイダは同様なオプションを持っているので、あなたは処理セッティングリストのほかの場所で同様にそれらを見つけるでしょう。"

# 08982522f292447f99ce70bf5d9d3ba2
#: ../../source/docs/user_manual/processing/3rdParty.rst:207
msgid "R. Creating R scripts"
msgstr "Rスクリプトで作成されたR.。"

# 10867a1fcf5f4c6ea135d373e88d3e98
#: ../../source/docs/user_manual/processing/3rdParty.rst:221
msgid ""
"Once again, this is different in Linux, and you just have to make sure that "
"the R folder is included in the PATH environment variable. If you can start "
"R just typing ``R`` in a console, then you are ready to go."
msgstr "今一度、これがLinuxでは異なるので、あなたはRフォルダがPATH環境変数に含まれているかをちゃんと確認しなければなりません。もし、お使いの環境のコンソールで''R''とだけタイプしてRを実行できるなら、実行する用意はできています。"

# eb8e5c1439e8493aae30112e7027d4d7
#: ../../source/docs/user_manual/processing/3rdParty.rst:286
msgid ""
"With the above information, we can now understand the first line of our "
"first example script (the first line not starting with a Python comment)."
msgstr "上記の情報により、現在私たちは最初のサンプルスクリプトの一行目(Pythonコマンドではじまらない第一行目)を理解することができます。"

# 2cefecc674d946fd8cb9441069447938
#: ../../source/docs/user_manual/processing/3rdParty.rst:293
msgid ""
"The variable ``polygon`` already contains a ``SpatialPolygonsDataFrame`` "
"object, so it can be used to call the ``spsample`` method, just like the "
"``numpoints`` one, which indicates the number of points to add to the "
"created sample grid."
msgstr "変数``polygon``はすでに``SpatialPolygonsDataFrame``オブジェクトを含んでいるので、ちょうど``numpoints`` メソッドのように、作成されたサンプルグリッドを加えたポイントの数を示めす、``spsample``メソッドを呼び込むことができます。"

# a1a775f0cc88432bafa327dfeb702f3a
#: ../../source/docs/user_manual/processing/3rdParty.rst:312
msgid ""
"If you have used the ``#passfilename`` option, outputs are generated using "
"the ``raster`` package (with ``writeRaster()``), even though it is not used "
"for the inputs."
msgstr "もし、あなたが``#passfilename``オプションを使ったならば、たとえ``raster`` パッケージ(``writeRaster()``を伴った)が入力に使われないとしても、出力はそれを使って作成されます。"

# 7f6f5cd6567545e7bc0e1922c86d2a64
#: ../../source/docs/user_manual/processing/3rdParty.rst:335
msgid ""
"If your algorithm creates any kind of graphics (using the ``plot()`` "
"method), add the following line:"
msgstr "もし、あなたのアルゴリズムがあるグラフィックスの種類(``plot()``メソッドを使って)を作成するならば、次の行を加えます:"

# 2bca5a6658d14febbc135635895fb4de
#: ../../source/docs/user_manual/processing/3rdParty.rst:345
msgid ""
"Both graphics and console results will be shown in the processing results "
"manager."
msgstr "グラフィックスとコンソール結果はどちらも処理結果マネジャで見えるようになります。"

# a1b1d2f04f4d4461a4a76d4e5b3b4456
#: ../../source/docs/user_manual/processing/3rdParty.rst:365
msgid "GRASS"
msgstr "GRASS: Geographic Resources Analysis Support System、地理的資源分析支援システム"

# 9dc76a8cf5874beca0f193e9354256b0
#: ../../source/docs/user_manual/processing/3rdParty.rst:367
msgid ""
"Configuring GRASS is not much different from configuring SAGA. First, the "
"path to the GRASS folder has to be defined, but only if you are running "
"Windows. Additionaly, a shell interpreter (usually :file:`msys.exe`, which "
"can be found in most GRASS for Windows distributions) has to be defined and "
"its path set up as well."
msgstr "GRASSを設定することはSAGAを設定することよりもそんなに難しくはありません。最初に、GRASSフォルダのパスが定義されなければなりませんが、あなたがウインドウズを利用している場合だけです。加えて、シェルインタプリタ(通常 :file:`msys.exe`は、ほとんどのウインドウズディストリビューションためのGRASSに見つけることができます)が定義され、そのパスも設定されていなければなりません。"

# 8b1e60e6d1df4a0d86f1f3ffc9c2880e
#: ../../source/docs/user_manual/processing/3rdParty.rst:380
msgid ""
"If you are running Linux, you just have to make sure that GRASS is correctly"
" installed, and that it can be run without problem from a console."
msgstr "もし、あなたがLinuxを利用している場合は、GRASSが適切にインストールされているかと、それがコンソールから問題なく起動するかを確認するだけです。"

# 943010e2681d4999a0dfd897f922502f
#: ../../source/docs/user_manual/processing/3rdParty.rst:396
msgid "GDAL"
msgstr "GDAL: Geospatial Data Abstraction Library、地理空間データ抽象化ライブラリ"

# 675fb65e19e74f9ab90928f0a23bfc14
#: ../../source/docs/user_manual/processing/3rdParty.rst:431
msgid "TauDEM"
msgstr "TauDEM: Terrain Analysis Using Digital Elevation Models、DEMを使用した地形分析"

# 10675c3cbed549ca8b080060be7dbd45
#: ../../source/docs/user_manual/processing/3rdParty.rst:436
msgid "Windows"
msgstr "Windows"

# 94a26bc8dca54cdc85bf7c5c2c5d8795
#: ../../source/docs/user_manual/processing/3rdParty.rst:444
msgid "Linux"
msgstr "Linux"

# c1affdc8960b455db9e2a7060aeea057
#: ../../source/docs/user_manual/processing/3rdParty.rst:465
msgid "so you'll get"
msgstr "だから取得できるでしょう"

# 5094cac785d54ab894256a132e6c0312
#: ../../source/docs/user_manual/processing/3rdParty.rst:492
msgid "and then compile"
msgstr "それからコンパイルします。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:24
msgid ""
"By default, all algorithms that rely on an external appplication not shipped"
" with |qg| are not enabled. You can enable them in the configuration dialog."
" Make sure that the corresponding application is already installed in your "
"system. Enabling an algorithm provider without installing the application it"
" needs will cause the algorithms to appear in the toolbox, but an error will"
" be thrown when you try to execute them."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:75
msgid ""
"Providers not using external applications can process any layer that you can"
" open in |qg|, since they open it for analysis through |qg|."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:105
msgid ""
"SAGA algorithms can be run from |qg| if you have SAGA installed in your "
"system and you configure the processing framework properly so it can find "
"SAGA executables. In particular, the SAGA command-line executable is needed "
"to run SAGA algorithms."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:156
msgid ""
"Notice that |qg| will resample input layers to that extent, even if they do "
"not overlap with it."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:225
msgid ""
"To add a new algorithm that calls an R function (or a more complex R script "
"that you have developed and you would like to have available from |qg|), you"
" have to create a script file that tells the processing framework how to "
"perform that operation and the corresponding R commands to do so."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:281
msgid ""
"If you are an advanced user and do not want |qg| to create the object "
"representing the layer, you can use the ``##passfilename`` tag to indicate "
"that you prefer a string with the filename instead. In this case, it is up "
"to you to open the file before performing any operation on the data it "
"contains."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:303
msgid ""
"In this case, the result obtained from the ``spsample`` method has to be "
"converted explicitly into a ``SpatialPointsDataFrame`` object, since it is "
"itself an object of class ``ppp``, which is not a suitable class to be "
"returned to |qg|."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:5
msgid "|updatedisclaimer|"
msgstr "|updatedisclaimer|"

#: ../../source/docs/user_manual/processing/3rdParty.rst:12
msgid ""
"The processing framework can be extended using additional applications. "
"Currently, SAGA, GRASS, OTB (Orfeo Toolbox) and R are supported, along with "
"some other command-line applications that provide spatial data analysis "
"functionalities. Algorithms relying on an external application are managed "
"by their own algorithm provider."
msgstr "プロセシングフレームワークは追加のアプリケーションを使用して拡張することができます。現在、SAGA、GRASS、OTB（Orfeo Toolbox）とRは、空間データ分析機能を提供するいくつかの他のコマンドラインアプリケーションと一緒に、サポートされています。外部アプリケーションに依存するアルゴリズムは、独自のアルゴリズムプロバイダによって管理されます。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:18
msgid ""
"This section will show you how to configure the processing framework to "
"include these additional applications, and it will explain some particular "
"features of the algorithms based on them. Once you have correctly configured"
" the system, you will be able to execute external algorithms from any "
"component like the toolbox or the graphical modeler, just like you do with "
"any other geoalgorithm."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:31
msgid ""
"This is because the algorithm descriptions (needed to create the parameters "
"dialog and provide the information needed about the algorithm) are not "
"included with each application, but with |qg| instead. That is, they are "
"part of |qg|, so you have them in your installation even if you have not "
"installed any other software. Running the algorithm, however, needs the "
"application binaries to be installed in your system."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:41
msgid ""
"If you are not an advanced user and you are running |qg| on Windows, you "
"might not be interested in reading the rest of this chapter. Make sure you "
"install |qg| in your system using the OSGeo4W application. That will "
"automatically install SAGA, GRASS and OTB in your system and configure them "
"so they can be run from |qg|. All the algorithms in the simplified view of "
"the toolbox will be ready to be run without needing any further "
"configuration."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:48
msgid ""
"If you want to know more about how these providers work, or if you want to "
"use some algorithms not included in the simplified toolbox (such as R "
"scripts), keep on reading."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:55
msgid ""
"When using an external software, opening a file in |qg| does not mean that "
"it can be opened and processed as well in that other software. In most "
"cases, other software can read what you have opened in |qg|, but in some "
"cases, that might not be true. When using databases or uncommon file "
"formats, whether for raster or vector layers, problems might arise. If that "
"happens, try to use well-known file formats that you are sure are understood"
" by both programs, and check the console output (in the history and log "
"dialog) to know more about what is going wrong."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:68
msgid ""
"You should, however, find no problems at all with vector layers, since |qg| "
"automatically converts from the original file format to one accepted by the "
"external application before passing the layer to it. This adds extra "
"processing time, which might be significant if the layer has a large size, "
"so do not be surprised if it takes more time to process a layer from a DB "
"connection than it does to process one of a similar size stored in a "
"shapefile."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:78
msgid ""
"Regarding output formats, all formats supported by |qg| as output can be "
"used, both for raster and vector layers. Some providers do not support "
"certain formats, but all can export to common raster layer formats that can "
"later be transformed by |qg| automatically. As in the case of input layers, "
"if this conversion is needed, that might increase the processing time."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:84
msgid ""
"If the extension of the filename specified when calling an algorithm does "
"not match the extension of any of the formats supported by |qg|, then a "
"suffix will be added to set a default format. In the case of raster layers, "
"the :file:`.tif` extension is used, while :file:`.shp` is used for vector "
"layers."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:92
msgid ""
"External applications may also be made aware of the selections that exist in"
" vector layers within |qg|. However, that requires rewriting all input "
"vector layers, just as if they were originally in a format not supported by "
"the external application. Only when no selection exists, or the *Use only "
"selected features* option is not enabled in the processing general "
"configuration, can a layer be directly passed to an external application."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:110
msgid ""
"If you are running Windows, both the stand-alone installer and the OSGeo4W "
"installer include SAGA along with |qg|, and the path is automatically "
"configured, so there is no need to do anything else."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:114
msgid ""
"If you have installed SAGA yourself (remember, you need version 2.1), the "
"path to the SAGA executable must be configured. To do this, open the "
"configuration dialog. In the :guilabel:`SAGA` block, you will find a setting"
" named :guilabel:`SAGA Folder`. Enter the path to the folder where SAGA is "
"installed. Close the configuration dialog, and now you are ready to run SAGA"
" algorithms from |qg|."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:121
msgid ""
"If you are running Linux, SAGA binaries are not included with SEXTANTE, so "
"you have to download and install the software yourself. Please check the "
"SAGA website for more information. SAGA 2.1 is needed."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:126
msgid ""
"In this case, there is no need to configure the path to the SAGA executable,"
" and you will not see those folders. Instead, you must make sure that SAGA "
"is properly installed and its folder is added to the PATH environment "
"variable. Just open a console and type ``saga_cmd`` to check that the system"
" can find where the SAGA binaries are located."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:135
msgid ""
"Most SAGA algorithms that require several input raster layers require them "
"to have the same grid system. That is, they must cover the same geographic "
"area and have the same cell size, so their corresponding grids match. When "
"calling SAGA algorithms from |qg|, you can use any layer, regardless of its "
"cell size and extent. When multiple raster layers are used as input for a "
"SAGA algorithm, |qg| resamples them to a common grid system and then passes "
"them to SAGA (unless the SAGA algorithm can operate with layers from "
"different grid systems)."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:143
msgid ""
"The definition of that common grid system is controlled by the user, and you"
" will find several parameters in the SAGA group of the settings window to do"
" so. There are two ways of setting the target grid system:"
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:147
msgid ""
"Setting it manually. You define the extent by setting the values of the "
"following parameters:"
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:158
msgid ""
"Setting it automatically from input layers. To select this option, just "
"check the :guilabel:`Use min covering grid system for resampling` option. "
"All the other settings will be ignored and the minimum extent that covers "
"all the input layers will be used. The cell size of the target layer is the "
"maximum of all cell sizes of the input layers."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:171
msgid ""
"Unlike |qg|, SAGA has no support for multi-band layers. If you want to use a"
" multiband layer (such as an RGB or multispectral image), you first have to "
"split it into single-banded images. To do so, you can use the 'SAGA/Grid - "
"Tools/Split RGB image' algorithm (which creates three images from an RGB "
"image) or the 'SAGA/Grid - Tools/Extract band' algorithm (to extract a "
"single band)."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:178
msgid "Limitations in cell size"
msgstr "セルサイズの制限"

#: ../../source/docs/user_manual/processing/3rdParty.rst:180
msgid ""
"SAGA assumes that raster layers have the same cell size in the X and Y axis."
" If you are working with a layer with different values for horizontal and "
"vertical cell size, you might get unexpected results. In this case, a "
"warning will be added to the processing log, indicating that an input layer "
"might not be suitable to be processed by SAGA."
msgstr "SAGAはラスタレイヤがx軸とy軸において同じセルサイズであることを仮定しています。もし、あなたが水平方向と垂直方向でセルサイズが異なる値のレイヤで作業するならば、あなたは予想できない結果を得ることになるでしょう。この場合、入力レイヤがSAGAによって適切に処理されないであろうという警告がプロセスログに加えられることになります。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:189
msgid ""
"When |qg| calls SAGA, it does so using its command-line interface, thus "
"passing a set of commands to perform all the required operations. SAGA shows"
" its progress by writing information to the console, which includes the "
"percentage of processing already done, along with additional content. This "
"output is filtered and used to update the progress bar while the algorithm "
"is running."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:196
msgid ""
"Both the commands sent by |qg| and the additional information printed by "
"SAGA can be logged along with other processing log messages, and you might "
"find them useful to track in detail what is going on when |qg| runs a SAGA "
"algorithm. You will find two settings, namely :guilabel:`Log console output`"
" and :guilabel:`Log execution commands`, to activate that logging mechanism."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:209
msgid ""
"R integration in |qg| is different from that of SAGA in that there is not a "
"predefined set of algorithms you can run (except for a few examples). "
"Instead, you should write your scripts and call R commands, much like you "
"would do from R, and in a very similar manner to what we saw in the section "
"dedicated to processing scripts. This section shows you the syntax to use to"
" call those R commands from |qg| and how to use |qg| objects (layers, "
"tables) in them."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:216
msgid ""
"The first thing you have to do, as we saw in the case of SAGA, is to tell "
"|qg| where your R binaries are located. You can do this using the "
":guilabel:`R folder` entry in the processing configuration dialog. Once you "
"have set that parameter, you can start creating and executing your own R "
"scripts."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:230
msgid ""
"R script files have the extension :file:`.rsx`, and creating them is pretty "
"easy if you just have a basic knowledge of R syntax and R scripting. They "
"should be stored in the R scripts folder. You can set this folder in the "
":guilabel:`R` settings group (available from the processing settings "
"dialog), just like you do with the folder for regular processing scripts."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:236
msgid ""
"Let’s have a look at a very simple script file, which calls the R method "
"``spsample`` to create a random grid within the boundary of the polygons in "
"a given polygon layer. This method belongs to the ``maptools`` package. "
"Since almost all the algorithms that you might like to incorporate into |qg|"
" will use or generate spatial data, knowledge of spatial packages like "
"``maptools`` and, especially, ``sp``, is mandatory."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:252
msgid ""
"The first lines, which start with a double Python comment sign (``##``), "
"tell |qg| the inputs of the algorithm described in the file and the outputs "
"that it will generate. They work with exactly the same syntax as the "
"SEXTANTE scripts that we have already seen, so they will not be described "
"here again. Check the :ref:`processing_scripts` section for more "
"information."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:258
msgid ""
"When you declare an input parameter, |qg| uses that information for two "
"things: creating the user interface to ask the user for the value of that "
"parameter and creating a corresponding R variable that can later be used as "
"input for R commands."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:263
msgid ""
"In the above example, we are declaring an input of type ``vector`` named "
"``polyg``. When executing the algorithm, |qg| will open in R the layer "
"selected by the user and store it in a variable also named ``polyg``. So, "
"the name of a parameter is also the name of the variable that we can use in "
"R for accesing the value of that parameter (thus, you should avoid using "
"reserved R words as parameter names)."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:269
msgid ""
"Spatial elements such as vector and raster layers are read using the "
"``readOGR()`` and ``brick()`` commands (you do not have to worry about "
"adding those commands to your description file -- |qg| will do it), and they"
" are stored as ``Spatial*DataFrame`` objects. Table fields are stored as "
"strings containing the name of the selected field."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:275
msgid ""
"Tables are opened using the ``read.csv()`` command. If a table entered by "
"the user is not in CSV format, it will be converted prior to importing it "
"into R."
msgstr "テーブルは``read.csv()``コマンドを使って開かれます。もし、ユーザによって入力されたテーブルがCSV形式でないならば、それはRによってそれがインポートされる前に変換されます。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:278
msgid ""
"Additionally, raster files can be read using the ``readGDAL()`` command "
"instead of ``brick()`` by using the ``##usereadgdal``."
msgstr "加えて、ラスタファイルは``##usereadgdal``を使うことによる``brick()``に代わって``readGDAL()``コマンドを使って読み込むことができます。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:297
msgid ""
"Since we have declared an output of type vector named ``out``, we have to "
"create a variable named ``out`` and store a ``Spatial*DataFrame`` object in "
"it (in this case, a ``SpatialPointsDataFrame``). You can use any name for "
"your intermediate variables. Just make sure that the variable storing your "
"final result has the same name that you used to declare it, and that it "
"contains a suitable value."
msgstr "私たちは``out``と名付けたタイプベクトルの出力を宣言してから、そこに(この場合は``SpatialPointsDataFrame``に)``out``と名付けた変数と``Spatial*DataFrame``オブジェクトを作成しなければならない。あなたの最終結果を保存する変数があなたが宣言して適切な値を含んでいる同じ名前を持つことを確認するように、あなたはあるらゆる名前をあなたの媒介変数として使うことができます。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:307
msgid ""
"If your algorithm generates raster layers, the way they are saved will "
"depend on whether or not you have used the ``#dontuserasterpackage`` option."
" In you have used it, layers are saved using the ``writeGDAL()`` method. If "
"not, the ``writeRaster()`` method from the ``raster`` package will be used."
msgstr "もし、あなたのアルゴリズムがラスタレイヤを作成するなら、それらを保存する方法はあなたが``#dontuserasterpackage``オプションを使用するかどうかによります。もし、あなたがそれを使用するならば、レイヤは``writeGDAL()``メソッドを使って保存されます。そうでないならば、``raster`` パッケージから``writeRaster()``メソッドが使われます。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:316
msgid ""
"If your algorithm does not generate any layer, but rather a text result in "
"the console instead, you have to indicate that you want the console to be "
"shown once the execution is finished. To do so, just start the command lines"
" that produce the results you want to print with the ``>`` ('greater') sign."
" The output of all other lines will not be shown. For instance, here is the "
"description file of an algorithm that performs a normality test on a given "
"field (column) of the attributes of a vector layer:"
msgstr "もし、あなたのアルゴリズムがなんのレイヤも作成しないで、代わりにコンソールにテキストで結果を作成するのならば、あなたは実行が終了したことを示すようにコンソールに指示をしなければなりません。このために、あなたは``>`` ('greater') サインを伴った印刷を欲する結果を作成するだけのコマンドラインを開始します。\nすべてのほかの行の出力は表示されません。たとえば、ここにあるのはベクトルレイヤの属性として与えられたフィールド(列)の正常性テストを実行するアルゴリズムの説明ファイルです:"

#: ../../source/docs/user_manual/processing/3rdParty.rst:332
msgid ""
"The output of the last line is printed, but the output of the first is not "
"(and neither are the outputs from other command lines added automatically by"
" |qg|)."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:342
msgid ""
"This will cause |qg| to redirect all R graphical outputs to a temporary "
"file, which will be opened once R execution has finished."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:347
msgid ""
"For more information, please check the script files provided with SEXTANTE. "
"Most of them are rather simple and will greatly help you understand how to "
"create your own scripts."
msgstr "更なる情報はSEXTANTEと共に提供されているスクリプトファイルを確認してください。それらのほとんどはかなり簡潔で、どのようにあなた自身の結果を作成するのかを理解することを十分に助けることでしょう。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:353
msgid ""
"``rgdal`` and ``maptools`` libraries are loaded by default, so you do not "
"have to add the corresponding ``library()`` commands (you just have to make "
"sure that those two packages are installed in your R distribution). However,"
" other additional libraries that you might need have to be explicitly "
"loaded. Just add the necessary commands at the beginning of your script. You"
" also have to make sure that the corresponding packages are installed in the"
" R distribution used by |qg|. The processing framework will not take care of"
" any package installation. If you run a script that requires a package that "
"is not installed, the execution will fail, and SEXTANTE will try to detect "
"which packages are missing. You must install those missing libraries "
"manually before you can run the algorithm."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:373
msgid ""
"By default, the processing framework tries to configure its GRASS connector "
"to use the GRASS distribution that ships along with |qg|. This should work "
"without problems in most systems, but if you experience problems, you might "
"have to configure the GRASS connector manually. Also, if you want to use a "
"different GRASS installation, you can change that setting and point to the "
"folder where the other version is installed. GRASS 6.4 is needed for "
"algorithms to work correctly."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:383
msgid ""
"GRASS algorithms use a region for calculations. This region can be defined "
"manually using values similar to the ones found in the SAGA configuration, "
"or automatically, taking the minimum extent that covers all the input layers"
" used to execute the algorithm each time. If the latter approach is the "
"behaviour you prefer, just check the :guilabel:`Use min covering region` "
"option in the GRASS configuration parameters."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:390
msgid ""
"The last parameter that has to be configured is related to the mapset. A "
"mapset is needed to run GRASS, and the processing framework creates a "
"temporary one for each execution. You have to specify if the data you are "
"working with uses geographical (lat/lon) coordinates or projected ones."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:398
msgid ""
"No additional configuration is needed to run GDAL algorithms. Since they are"
" already incorporated into |qg|, the algorithms can infer their "
"configuration from it."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:402
msgid "Orfeo Toolbox"
msgstr "Orfeo ToolBox"

#: ../../source/docs/user_manual/processing/3rdParty.rst:404
msgid ""
"Orfeo Toolbox (OTB) algorithms can be run from |qg| if you have OTB "
"installed in your system and you have configured |qg| properly, so it can "
"find all necessary files (command-line tools and libraries)."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:409
msgid ""
"As in the case of SAGA, OTB binaries are included in the stand-alone "
"installer for Windows, but they are not included if you are runing Linux, so"
" you have to download and install the software yourself. Please check the "
"OTB website for more information."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:414
msgid ""
"Once OTB is installed, start |qg|, open the processing configuration dialog "
"and configure the OTB algorithm provider. In the :guilabel:`Orfeo Toolbox "
"(image analysis)` block, you will find all settings related to OTB. First, "
"ensure that algorithms are enabled."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:419
msgid ""
"Then, configure the path to the folder where OTB command-line tools and "
"libraries are installed:"
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:422
msgid ""
"|nix| Usually :guilabel:`OTB applications folder` points to "
"``/usr/lib/otb/applications`` and :guilabel:`OTB command line tools folder` "
"is ``/usr/bin``."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:424
msgid ""
"|win| If you use the OSGeo4W installer, then install ``otb-bin`` package and"
" enter ``C:\\OSGeo4W\\apps\\orfeotoolbox\\applications`` as :guilabel:`OTB "
"applications folder` and ``C:\\OSGeo4W\\bin`` as :guilabel:`OTB command line"
" tools folder`. These values should be configured by default, but if you "
"have a different OTB installation, configure them to the corresponding "
"values in your system."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:433
msgid "To use this provider, you need to install TauDEM command line tools."
msgstr "このプロバイダーを使用するためには、あなたはTauDEMコマンドラインツールをインストールしなければなりません。"

#: ../../source/docs/user_manual/processing/3rdParty.rst:438
msgid ""
"Please visit the `TauDEM homepage "
"<http://hydrology.usu.edu/taudem/taudem5.0/downloads.html>`_ for "
"installation instructions and precompiled binaries for 32-bit and 64-bit "
"systems. **IMPORTANT**: You need TauDEM 5.0.6 executables. Version 5.2 is "
"currently not supported."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:446
msgid ""
"There are no packages for most Linux distributions, so you should compile "
"TauDEM by yourself. As TauDEM uses MPICH2, first install it using your "
"favorite package manager. Alternatively, TauDEM works fine with Open MPI, so"
" you can use it instead of MPICH2."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:450
msgid ""
"Download TauDEM 5.0.6 `source code "
"<http://hydrology.usu.edu/taudem/taudem5.0/TauDEM5PCsrc_506.zip>`_ and "
"extract the files in some folder."
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:453
msgid "Open the :file:`linearpart.h` file, and after line"
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:459
msgid "add a new line with"
msgstr "新しい行を加える"

#: ../../source/docs/user_manual/processing/3rdParty.rst:472
msgid ""
"Save the changes and close the file. Now open :file:`tiffIO.h`, find line "
"``#include \"stdint.h\"`` and replace quotes (``\"\"``) with ``<>``, so "
"you'll get"
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:479
msgid ""
"Save the changes and close the file. Create a build directory and cd into it"
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:486
msgid "Configure your build with the command"
msgstr ""

#: ../../source/docs/user_manual/processing/3rdParty.rst:498
msgid "Finally, to install TauDEM into ``/usr/local/bin``, run"
msgstr ""

#~ msgid ""
#~ "The processign framework can be extended using additional applications. "
#~ "Currently, SAGA, GRASS, OTB(Orfeo Toolbox) and R are supported, along with "
#~ "some other command-line applications that provide spatial data analysis "
#~ "functionalities. Algorithms relying on an external application are managed "
#~ "by their own algorithm provider."
#~ msgstr ""

#~ msgid ""
#~ "This chapter will show you how to configure the processing framework to "
#~ "include these additional applications, and will explain some particular "
#~ "features of the algorithm based on them. Once you have correctly configured "
#~ "the system, you will be able to execute external algorithms from any "
#~ "component like the toolbox or the graphical modeler, just like you do with "
#~ "any other geoalgorithm."
#~ msgstr ""

#~ msgid ""
#~ "If you want to know more about how these providers work, or want to use some"
#~ " algorithms not included in the simplified toolbox (such as R scripts), keep"
#~ " on reading."
#~ msgstr ""

#~ msgid ""
#~ "In case you are running linux, SAGA binaries are not included with SEXTANTE,"
#~ " so you have to download and install the software yourself. Please check the"
#~ " SAGA website for more information. SAGA 2.1 is needed."
#~ msgstr ""

#~ msgid ""
#~ "In this case there is no need to configure that, and you will not see those "
#~ "folders. Instead, you must make sure that SAGA is properly installed and its"
#~ " folder is added to the PATH environment variable. Just open a console and "
#~ "type ``saga_cmd`` to check that the system can find where SAGA binaries are "
#~ "located."
#~ msgstr ""

#~ msgid ""
#~ "The definition of that common grid system is controlled by the user, and you"
#~ " will find several parameters in the SAGA group of the setting window to do "
#~ "so. There are two ways of setting the target grid system:"
#~ msgstr ""

#~ msgid ""
#~ "Setting it manually. You define the extent setting the values of the "
#~ "following parameters:"
#~ msgstr ""

#~ msgid ""
#~ "Setting it automatically from input layers. To select this option, just "
#~ "check the :guilabel:`Use min covering grid system for resampling` option. "
#~ "All the other settings will be ignored and the minimum extent that covers "
#~ "all the input layers will be used. The cellsize of the target layer is the "
#~ "maximum of all cellsizes of the input layers."
#~ msgstr ""

#~ msgid "Limitations in cellsize"
#~ msgstr ""

#~ msgid ""
#~ "SAGA assumes that raster layers have the same cellsize in the X and Y axis. "
#~ "If you are working with a layer with different values for its horizontal and"
#~ " vertical cellsizes, you might get unexcepted results. In this case, a "
#~ "warning will be added to the processing log, indicating that an input layer "
#~ "might not be suitable to be processed by SAGA."
#~ msgstr ""

#~ msgid ""
#~ "Script files have the extension :file:`.rsx` and creating them is pretty "
#~ "easy if you just have a basic knowledge of R syntax and R scripting. They "
#~ "should be stored in the R-scripts folder. You can set this folder in the "
#~ ":guilabel:`R` settings group (available from the processing settings "
#~ "dialog), just like you do with the folder for regular processing scripts."
#~ msgstr ""

#~ msgid ""
#~ "Tables are opened using the ``read.csv()`` command. If a table entered by "
#~ "the user is not in CSV format, it will be converted prior to importing it in"
#~ " R."
#~ msgstr ""

#~ msgid ""
#~ "Additionally, raster files can be read using the ``readGDAL()`` command "
#~ "instead of ``brick()``, by using the ``##usereadgdal``."
#~ msgstr ""

#~ msgid ""
#~ "Since we have declared an output of type vector named ``out``, we have to "
#~ "create a variable named ``out`` and store a ``Spatial*DataFrame`` object in "
#~ "it (in this case, a ``SpatialPointsDataFrame``). You can use any name for "
#~ "your intermediate variables. Just make sure that the variable storing your "
#~ "final result has the same name that you used to declare it, and contains a "
#~ "suitable value."
#~ msgstr ""

#~ msgid ""
#~ "If your algorithm generates raster layers, the way they are saved will "
#~ "depend on whether you have used or not the ``#dontuserasterpackage`` option."
#~ " In you have used it, layers are saved using the ``writeGDAL()`` method. If "
#~ "not, the ``writeRaster()`` method from the ``raster`` package will be used."
#~ msgstr ""

#~ msgid ""
#~ "If you algorithm does not generate any layer, but a text result in the "
#~ "console instead, you have to indicate that you want the console to be shown "
#~ "once the execution is finished. To do so, just start the command lines that "
#~ "produce the results you want to print with the ``>`` ('greater') sign. The "
#~ "output of all other lines will not be shown. For instance, here is the "
#~ "description file of an algorithm that performs a normality test on a given "
#~ "field (column) of the attributes of a vector layer:"
#~ msgstr ""

#~ msgid ""
#~ "For more information, please check the script files provided with SEXTANTE. "
#~ "Most of them are rather simple and will greatly help you understand how to "
#~ "create your own ones."
#~ msgstr ""

#~ msgid ""
#~ "GRASS algorithms use a region for calculations. This region can be defined "
#~ "manually using values similar to the ones found in the SAGA configuration, "
#~ "or automatically, taking the minimum extent that covers all the input layers"
#~ " used to execute the algorithm each time. If this is the behaviour you "
#~ "prefer, just check the :guilabel:`Use min covering region` option in the "
#~ "GRASS configuration parameters."
#~ msgstr ""

#~ msgid ""
#~ "The last parameter that has to be configured is related to the mapset. A "
#~ "mapset is needed to run GRASS, and the  processing frmaework creates a "
#~ "temporary one for each execution. You have to specify if the data you are "
#~ "working with uses geographical (lat/lon) coordinates or projected ones."
#~ msgstr ""

#~ msgid "Orfeo ToolBox"
#~ msgstr ""

#~ msgid ""
#~ "As in the case of SAGA OTB binaries are included in the standalone installer"
#~ " for Windows, but are not included if you are runing Linux, so you have to "
#~ "download and install the software yourself. Please check the OTB website for"
#~ " more information."
#~ msgstr ""

#~ msgid ""
#~ "Then configure the path to the folder where OTB command--line tools and "
#~ "libraries are installed:"
#~ msgstr ""

#~ msgid ""
#~ "|nix| usually :guilabel:`OTB applications folder` point to "
#~ "``/usr/lib/otb/applications`` and :guilabel:`OTB command line tools folder` "
#~ "is ``/usr/bin``"
#~ msgstr ""

#~ msgid ""
#~ "|win| if you use OSGeo4W installer, than install ``otb-bin`` package and "
#~ "enter ``C:\\OSGeo4W\\apps\\orfeotoolbox\\applications`` as :guilabel:`OTB "
#~ "applications folder` and ``C:\\OSGeo4W\\bin`` as :guilabel:`OTB command line"
#~ " tools folder`. This values should be configured by default, but if you have"
#~ " a different OTB installation, configure them to the correspondig values in "
#~ "your system."
#~ msgstr ""

#~ msgid "To use this provider you need to install TauDEM command line tools."
#~ msgstr ""

#~ msgid ""
#~ "Please visit `TauDEM homepage "
#~ "<http://hydrology.usu.edu/taudem/taudem5.0/downloads.html>`_ for "
#~ "installation instructions and precompiled binaries for 32bit and 64bit "
#~ "systems. **IMPORTANT**: you need TauDEM 5.0.6 executables, version 5.2 is "
#~ "currently not supported."
#~ msgstr ""

#~ msgid ""
#~ "There are no packages for most Linux distribution, so you should compile "
#~ "TauDEM by yourself. As TauDEM uses MPICH2, first install it using your "
#~ "favorite package manager. Also TauDEM works fine with OpenMPI, so you can "
#~ "use it instead of MPICH2."
#~ msgstr ""

#~ msgid ""
#~ "Download TauDEM 5.0.6 `source code "
#~ "<http://hydrology.usu.edu/taudem/taudem5.0/TauDEM5PCsrc_506.zip>`_ and "
#~ "extract files in some folder."
#~ msgstr ""

#~ msgid "Open :file:`linearpart.h` file and add after line"
#~ msgstr ""

#~ msgid "add new line with"
#~ msgstr ""

#~ msgid ""
#~ "Save changes and close file. Now open :file:`tiffIO.h`, find line ``#include"
#~ " \"stdint.h\"`` and replace quotes (``\"\"``) with ``<>``, so you'll get"
#~ msgstr ""

#~ msgid "Save changes and close file. Create build directory and cd into it"
#~ msgstr ""

#~ msgid "Configure your build with command"
#~ msgstr ""

#~ msgid "Finaly, to install TauDEM into ``/usr/local/bin``, run"
#~ msgstr ""

#~ msgid ""
#~ "This is because the algorithm descriptions (needed to create the parameters "
#~ "dialog and provide the information needed about the algorithm) are not "
#~ "included with each application, but with |qg| instead. That is,they are part"
#~ " of |qg|, so you have them in your installation even if you have not "
#~ "installed any other software. Running the algorithm, however, needs the "
#~ "application binaries to be installed in your system."
#~ msgstr ""

#~ msgid ""
#~ "If you are not an advanced user and you are running |qg| on windows, you "
#~ "might not be interested in reading the rest of this chapter. Make sure you "
#~ "install |qg| in your system using the OSGeo4W application. That will "
#~ "automatically install SAGA, GRASS and OTB in your system, and configure them"
#~ " so they can be run from |qg|. All the algorithms in the simplified view of "
#~ "the toolbox will be ready to be run, without needing any further "
#~ "configuration."
#~ msgstr ""

#~ msgid ""
#~ "When using an external software, opening a file in |qg| does not mean that "
#~ "it can be opened and processed as well on that other software. In most "
#~ "cases, it can read what you have opened in |qg|, but in some cases, that "
#~ "might not be the case. When using databases or uncommon file formats, "
#~ "whether for raster of vector layers, problems might arise. If that happens, "
#~ "try to use well known file formats that you are sure that are understood by "
#~ "both programs, and check to console output (in the history and log dialog) "
#~ "for knowing more about what is going wrong."
#~ msgstr ""

#~ msgid ""
#~ "You should, however, find no problems at all with vector layers, since |qg| "
#~ "automatically converts from the original file format to one accepted by the "
#~ "external application before passing the layer to it. This adds an extra "
#~ "processing time, which might be significant if the layer has a large size, "
#~ "so do not be surprised if it takes more to process a layer from a DB "
#~ "connection that one of a similar size stored in a shapefile."
#~ msgstr ""

#~ msgid ""
#~ "Regarding output formats, all formats supported by |qg| as output can be "
#~ "used, both for raster and vector layers. Some provider do not support "
#~ "certain formats, but all can export to common formats raster layers that can"
#~ " be later transformed by |qg| automatically. As in the case of input layers,"
#~ " if this conversion is needed, that might increase the processing time."
#~ msgstr ""

#~ msgid ""
#~ "If the extension of the filename specified when calling an algorithm does "
#~ "not match the extension of any of the formats supported by |qg|, then a "
#~ "suffix will be added to set a default format. In the case of raster layers, "
#~ "the :file:`tif` extension is used, while :file:`shp` is used for vector "
#~ "layer."
#~ msgstr ""

#~ msgid ""
#~ "External applications are also aware of the selection that exist in vector "
#~ "layers within |qg|. However, that requires rewritting all input vector "
#~ "layers, just as if they were originally in a format not supported by the "
#~ "external application. Only when no selection exist, or the *Use only "
#~ "selected features* option is not enabled in the processing general "
#~ "configuration, a layer can be directly passed to an external application."
#~ msgstr ""

#~ msgid ""
#~ "In case of running Windows, the standalone installer or the OSGeo4W "
#~ "installer, both install SAGA along with |qg|, and the path is automatically "
#~ "configured, so there is no need to do anything else."
#~ msgstr ""

#~ msgid ""
#~ "If you have installed SAGA yourself (remember, you need version 2.1), the "
#~ "path to the SAGA executable must be configured. To do it, open the "
#~ "configuration dialog. In the :guilabel:`SAGA` block you will find a setting "
#~ "named :guilabel:`SAGA Folder`. Enter the path to the folder where SAGA is "
#~ "installed. Close the configuration dialog and now you are ready to run SAGA "
#~ "algorithms from |qg|."
#~ msgstr ""

#~ msgid ""
#~ "Most of SAGA algorithms that require several input raster layers, require "
#~ "them to have the same grid system. That is, to cover the same geographic "
#~ "area and have the same cellsize, so their corresponding grids match. When "
#~ "calling SAGA algorithms from |qg|, you can use any layer, regardless of its "
#~ "cellsize and extent. When multiple raster layers are used as input for a "
#~ "SAGA algorithm, |qg| resamples them to a common grid system and then passes "
#~ "them to SAGA (unless the SAGA algorithm can operate with layers from "
#~ "different grid systems)."
#~ msgstr ""

#~ msgid ""
#~ "Unlike |qg|, SAGA has no support for multi-band layers. If you want to use a"
#~ " multiband layer (such as an RGB or multispectral image), you first have to "
#~ "split it into single-banded images. To do so, you can use the 'SAGA/Grid - "
#~ "Tools/Split RGB image' algorithm (which creates 3 images from an RGB image) "
#~ "or the 'SAGA/Grid - Tools/Extract band' algorithm (to extract a single "
#~ "band)."
#~ msgstr ""

#~ msgid ""
#~ "When |qg| calls SAGA, it does it using its command-line interface, thus "
#~ "passing a set of commands to perform all the required operation. SAGA show "
#~ "its progress by writing information to the console, which includes the "
#~ "percentage of processing already done, along with additional content. This "
#~ "output is filtered and used to update the progress bar while the algorithm "
#~ "is running."
#~ msgstr ""

#~ msgid ""
#~ "Both the commands sent by |qg| and the additional information printed by "
#~ "SAGA can be logged along with other processing log messages, and you might "
#~ "find them useful to track in detailed what is going on when |qg| runs a SAGA"
#~ " algorithm. you will find two settings, namely :guilabel:`Log console "
#~ "output` and :guilabel:`Log execution commands` to activate that logging "
#~ "mechanism."
#~ msgstr ""

#~ msgid ""
#~ "R integration in |qg| is different from that of SAGA in that there is not a "
#~ "predefined set of algorithms you can run (except for a few examples). "
#~ "Instead, you should write your scripts and call R commands, much like you "
#~ "would do from R, and in a very similar manner to what we saw in the chapter "
#~ "dedicated to processing scripts. This chapter shows you the syntax to use to"
#~ " call those R commands from |qg| and how to use |qg| objects (layers, "
#~ "tables) in them."
#~ msgstr ""

#~ msgid ""
#~ "The first thing you have to do, as we saw in the case of SAGA, is to tell "
#~ "|qg| where you R binaries are located. You can do so using the :guilabel:`R "
#~ "folder` entry in the processing configuration dialog. Once you have set that"
#~ " parameter, you can start creating your own R scripts and executing them."
#~ msgstr ""

#~ msgid ""
#~ "Let’s have a look at a very simple file script file, which calls the R "
#~ "method ``spsample`` to create a random grid within the boundary of the "
#~ "polygons in a given polygon layer. This method belong to the ``maptools`` "
#~ "package. Since almost all the algorithms that you might like to incorporate "
#~ "into |qg| will use or generate spatial data, knowledge of spatial packages "
#~ "like ``maptools`` and, specially, ``sp``, is mandatory."
#~ msgstr ""

#~ msgid ""
#~ "The first lines, which start with a double Python comment sign (``##``), "
#~ "tell |qg| the inputs of the algorithm described in the file and the outputs "
#~ "that it will generate. They work exactly with the same syntax as the "
#~ "SEXTANTE scripts that we have already seen, so they will not be described "
#~ "here again. Check the :ref:`processing_scripts` section for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "When you declare an input parameter, |qg| uses that information for two "
#~ "things: creating the user interface to ask the user for the value of that "
#~ "parameter and creating a corresponding R variable that can be later used as "
#~ "input for R commands."
#~ msgstr ""

#~ msgid ""
#~ "In the above example, we are declaring an input of type ``vector`` named "
#~ "``polyg``. When executing the algorithm, |qg| will open in R the layer "
#~ "selected by the user and store it in a variable also named ``polyg``. So the"
#~ " name of a parameter is also the name of the variable that we can use in R "
#~ "for accesing the value of that parameter (thus, you should avoid using "
#~ "reserved R words as parameter names)."
#~ msgstr ""

#~ msgid ""
#~ "Spatial elements such as vector and raster layers are read using the "
#~ "``readOGR()`` and ``brick()`` commands (you do not have to worry about "
#~ "adding those commands to your description file, |qg| will do it) and stored "
#~ "as ``Spatial*DataFrame`` objects. Table fields are stored as strings "
#~ "containing the name of the selected field."
#~ msgstr ""

#~ msgid ""
#~ "The output ot the last line is printed, but the output of the first is not "
#~ "(and neither are the outputs from other command lines added automatically by"
#~ " |qg|)."
#~ msgstr ""

#~ msgid ""
#~ "This will cause |qg| to redirect all R graphical outputs to a temporary "
#~ "file, which will be later opened once R execution has finished."
#~ msgstr ""

#~ msgid ""
#~ "``rgdal`` and ``maptools`` libraries are loaded by default so you do not "
#~ "have to add the corresponding ``library()`` commands (you have to make sure,"
#~ " however, that those two packages are installed in your R distribution). "
#~ "However, other additional libraries that you might need have to be "
#~ "explicitly loaded. Just add the necessary commands at the beginning of your "
#~ "script. You also have to make sure that the corresponding packages are "
#~ "installed in the R distribution used by |qg|. The processing framework will "
#~ "not take care of any package installation. If you run a script that requires"
#~ " an uninstalled package, the execution will fail, and SEXTANTE will try to "
#~ "detect which packages are missing. You must install those missing libraries "
#~ "manually before you can run the algorithm."
#~ msgstr ""

#~ msgid ""
#~ "By default, the processign framework tries to configure its GRASS connector "
#~ "to use the GRASS distribution that ships along with |qg|. This should work "
#~ "without problems in most systems, but if you experience problems, you might "
#~ "have to do it manually. Also, if you want to use a different GRASS "
#~ "installation, you can change that setting and point to the folder where that"
#~ " it is installed. GRASS 6.4 is needed for algorithms to work correctly."
#~ msgstr ""

#~ msgid ""
#~ "No additional configuration is needed to run GDAL algorithms, since it is "
#~ "already incorporated to |qg| and algorithms can infere its configuration "
#~ "from it."
#~ msgstr ""

#~ msgid ""
#~ "Orfeo ToolBox (OTB) algorithms can be run from |qg| if you have OTB "
#~ "installed in your system and you have configured |qg| properly, so it can "
#~ "find all necessary files (command-line tools and libraries)."
#~ msgstr ""

#~ msgid ""
#~ "Once OTB is installed, start |qg|, open the processing configuration dialog "
#~ "and configure the OTB algorithm provider. In the :guilabel:`Orfeo Toolbox "
#~ "(image analysis)` block you will find all settings related to OTB. First "
#~ "ensure that algorithms are enabled."
#~ msgstr ""

#~ msgid ""
#~ "By default, all algorithms that rely on an external appplication not shipped"
#~ " with QGIS are not enabled. You can enable them in the configuration dialog."
#~ " Make sure that the corresponding application is already installed in your "
#~ "system. Enabling an algorithm provider without installing the application it"
#~ " needs will cause the algorithms to appear in the toolbox, but an error will"
#~ " be thrown when you try to execute them."
#~ msgstr ""

#~ msgid ""
#~ "This is because the algorithm descriptions (needed to create the parameters "
#~ "dialog and provide the information needed about the algorithm) are not "
#~ "included with each application, but with QGIS instead. That is,they are part"
#~ " of QGIS, so you have them in your installation even if you have not "
#~ "installed any other software. Running the algorithm, however, needs the "
#~ "application binaries to be installed in your system."
#~ msgstr ""

#~ msgid ""
#~ "If you are not an advanced user and you are running QGIS on windows, you "
#~ "might not be interested in reading the rest of this chapter. Make sure you "
#~ "install QGIS in your system using the OSGeo4W application. That will "
#~ "automatically install SAGA, GRASS and OTB in your system, and configure them"
#~ " so they can be run from QGIS. All the algorithms in the simplified view of "
#~ "the toolbox will be ready to be run, without needing any further "
#~ "configuration."
#~ msgstr ""

#~ msgid ""
#~ "When using an external software, opening a file in QGIS does not mean that "
#~ "it can be opened and processed as well on that other software. In most "
#~ "cases, it can read what you have opened in QGIS, but in some cases, that "
#~ "might not be the case. When using databases or uncommon file formats, "
#~ "whether for raster of vector layers, problems might arise. If that happens, "
#~ "try to use well known file formats that you are sure that are understood by "
#~ "both programs, and check to console output (in the history and log dialog) "
#~ "for knowing more about what is going wrong."
#~ msgstr ""

#~ msgid ""
#~ "You should, however, find no problems at all with vector layers, since QGIS "
#~ "automatically converts from the original file format to one accepted by the "
#~ "external application before passing the layer to it. This adds an extra "
#~ "processing time, which might be significant if the layer has a large size, "
#~ "so do not be surprised if it takes more to process a layer from a DB "
#~ "connection that one of a similar size stored in a shapefile."
#~ msgstr ""

#~ msgid ""
#~ "Providers not using external applications can process any layer that you can"
#~ " open in QGIS, since they open it for analysis through QGIS."
#~ msgstr ""

#~ msgid ""
#~ "Regarding output formats, all formats supported by QGIS as output can be "
#~ "used, both for raster and vector layers. Some provider do not support "
#~ "certain formats, but all can export to common formats raster layers that can"
#~ " be later transformed by QGIS automatically. As in the case of input layers,"
#~ " if this conversion is needed, that might increase the processing time."
#~ msgstr ""

#~ msgid ""
#~ "If the extension of the filename specified when calling an algorithm does "
#~ "not match the extension of any of the formats supported by QGIS, then a "
#~ "suffix will be added to set a default format. In the case of raster layers, "
#~ "the :file:`tif` extension is used, while :file:`shp` is used for vector "
#~ "layer."
#~ msgstr ""

#~ msgid ""
#~ "External applications are also aware of the selection that exist in vector "
#~ "layers within QGIS. However, that requires rewritting all input vector "
#~ "layers, just as if they were originally in a format not supported by the "
#~ "external application. Only when no selection exist, or the *Use only "
#~ "selected features* option is not enabled in the processing general "
#~ "configuration, a layer can be directly passed to an external application."
#~ msgstr ""

#~ msgid ""
#~ "SAGA algorithms can be run from QGIS if you have SAGA installed in your "
#~ "system and you configure the processing framework properly so it can find "
#~ "SAGA executables. In particular, the SAGA command-line executable is needed "
#~ "to run SAGA algorithms."
#~ msgstr ""

#~ msgid ""
#~ "In case of running Windows, the standalone installer or the OSGeo4W "
#~ "installer, both install SAGA along with QGIS, and the path is automatically "
#~ "configured, so there is no need to do anything else."
#~ msgstr ""

#~ msgid ""
#~ "If you have installed SAGA yourself (remember, you need version 2.1), the "
#~ "path to the SAGA executable must be configured. To do it, open the "
#~ "configuration dialog. In the :guilabel:`SAGA` block you will find a setting "
#~ "named :guilabel:`SAGA Folder`. Enter the path to the folder where SAGA is "
#~ "installed. Close the configuration dialog and now you are ready to run SAGA "
#~ "algorithms from QGIS."
#~ msgstr ""

#~ msgid ""
#~ "Most of SAGA algorithms that require several input raster layers, require "
#~ "them to have the same grid system. That is, to cover the same geographic "
#~ "area and have the same cellsize, so their corresponding grids match. When "
#~ "calling SAGA algorithms from QGIS, you can use any layer, regardless of its "
#~ "cellsize and extent. When multiple raster layers are used as input for a "
#~ "SAGA algorithm, QGIS resamples them to a common grid system and then passes "
#~ "them to SAGA (unless the SAGA algorithm can operate with layers from "
#~ "different grid systems)."
#~ msgstr ""

#~ msgid ""
#~ "Notice that QGIS will resample input layers to that extent, even if they do "
#~ "not overlap with it."
#~ msgstr ""

#~ msgid ""
#~ "Unlike QGIS, SAGA has no support for multi-band layers. If you want to use a"
#~ " multiband layer (such as an RGB or multispectral image), you first have to "
#~ "split it into single-banded images. To do so, you can use the 'SAGA/Grid - "
#~ "Tools/Split RGB image' algorithm (which creates 3 images from an RGB image) "
#~ "or the 'SAGA/Grid - Tools/Extract band' algorithm (to extract a single "
#~ "band)."
#~ msgstr ""

#~ msgid ""
#~ "When QGIS calls SAGA, it does it using its command-line interface, thus "
#~ "passing a set of commands to perform all the required operation. SAGA show "
#~ "its progress by writing information to the console, which includes the "
#~ "percentage of processing already done, along with additional content. This "
#~ "output is filtered and used to update the progress bar while the algorithm "
#~ "is running."
#~ msgstr ""

#~ msgid ""
#~ "Both the commands sent by QGIS and the additional information printed by "
#~ "SAGA can be logged along with other processing log messages, and you might "
#~ "find them useful to track in detailed what is going on when QGIS runs a SAGA"
#~ " algorithm. you will find two settings, namely :guilabel:`Log console "
#~ "output` and :guilabel:`Log execution commands` to activate that logging "
#~ "mechanism."
#~ msgstr ""

#~ msgid ""
#~ "R integration in QGIS is different from that of SAGA in that there is not a "
#~ "predefined set of algorithms you can run (except for a few examples). "
#~ "Instead, you should write your scripts and call R commands, much like you "
#~ "would do from R, and in a very similar manner to what we saw in the chapter "
#~ "dedicated to processing scripts. This chapter shows you the syntax to use to"
#~ " call those R commands from QGIS and how to use QGIS objects (layers, "
#~ "tables) in them."
#~ msgstr ""

#~ msgid ""
#~ "The first thing you have to do, as we saw in the case of SAGA, is to tell "
#~ "QGIS where you R binaries are located. You can do so using the :guilabel:`R "
#~ "folder` entry in the processing configuration dialog. Once you have set that"
#~ " parameter, you can start creating your own R scripts and executing them."
#~ msgstr ""

#~ msgid ""
#~ "To add a new algorithm that calls an R function (or a more complex R script "
#~ "that you have developed and you would like to have available from QGIS), you"
#~ " have to create a script file that tells the processing framework how to "
#~ "perform that operation and the corresponding R commands to do so."
#~ msgstr ""

#~ msgid ""
#~ "Let’s have a look at a very simple file script file, which calls the R "
#~ "method ``spsample`` to create a random grid within the boundary of the "
#~ "polygons in a given polygon layer. This method belong to the ``maptools`` "
#~ "package. Since almost all the algorithms that you might like to incorporate "
#~ "into QGIS will use or generate spatial data, knowledge of spatial packages "
#~ "like ``maptools`` and, specially, ``sp``, is mandatory."
#~ msgstr ""

#~ msgid ""
#~ "The first lines, which start with a double Python comment sign (``##``), "
#~ "tell QGIS the inputs of the algorithm described in the file and the outputs "
#~ "that it will generate. They work exactly with the same syntax as the "
#~ "SEXTANTE scripts that we have already seen, so they will not be described "
#~ "here again. Check the :ref:`processing_scripts` section for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "When you declare an input parameter, QGIS uses that information for two "
#~ "things: creating the user interface to ask the user for the value of that "
#~ "parameter and creating a corresponding R variable that can be later used as "
#~ "input for R commands."
#~ msgstr ""

#~ msgid ""
#~ "In the above example, we are declaring an input of type ``vector`` named "
#~ "``polyg``. When executing the algorithm, QGIS will open in R the layer "
#~ "selected by the user and store it in a variable also named ``polyg``. So the"
#~ " name of a parameter is also the name of the variable that we can use in R "
#~ "for accesing the value of that parameter (thus, you should avoid using "
#~ "reserved R words as parameter names)."
#~ msgstr ""

#~ msgid ""
#~ "Spatial elements such as vector and raster layers are read using the "
#~ "``readOGR()`` and ``brick()`` commands (you do not have to worry about "
#~ "adding those commands to your description file, QGIS will do it) and stored "
#~ "as ``Spatial*DataFrame`` objects. Table fields are stored as strings "
#~ "containing the name of the selected field."
#~ msgstr ""

#~ msgid ""
#~ "If you are an advanced user and do not want QGIS to create the object "
#~ "representing the layer, you can use the ``##passfilename`` tag to indicate "
#~ "that you prefer a string with the filename instead. In this case, it is up "
#~ "to you to open the file before performing any operation on the data it "
#~ "contains."
#~ msgstr ""

#~ msgid ""
#~ "In this case, the result obtained from the ``spsample`` method has to be "
#~ "converted explicitly into a ``SpatialPointsDataFrame`` object, since it is "
#~ "itself an object of class ``ppp``, which is not a suitable class to be "
#~ "returned to QGIS."
#~ msgstr ""

#~ msgid ""
#~ "The output ot the last line is printed, but the output of the first is not "
#~ "(and neither are the outputs from other command lines added automatically by"
#~ " QGIS)."
#~ msgstr ""

#~ msgid ""
#~ "This will cause QGIS to redirect all R graphical outputs to a temporary "
#~ "file, which will be later opened once R execution has finished."
#~ msgstr ""

#~ msgid ""
#~ "By default, the processign framework tries to configure its GRASS connector "
#~ "to use the GRASS distribution that ships along with QGIS. This should work "
#~ "without problems in most systems, but if you experience problems, you might "
#~ "have to do it manually. Also, if you want to use a different GRASS "
#~ "installation, you can change that setting and point to the folder where that"
#~ " it is installed. GRASS 6.4 is needed for algorithms to work correctly."
#~ msgstr ""

#~ msgid ""
#~ "No additional configuration is needed to run GDAL algorithms, since it is "
#~ "already incorporated to QGIS and algorithms can infere its configuration "
#~ "from it."
#~ msgstr ""

#~ msgid ""
#~ "Orfeo ToolBox (OTB) algorithms can be run from QGIS if you have OTB "
#~ "installed in your system and you have configured QGIS properly, so it can "
#~ "find all necessary files (command-line tools and libraries)."
#~ msgstr ""

#~ msgid ""
#~ "Once OTB is installed, start QGIS, open the processing configuration dialog "
#~ "and configure the OTB algorithm provider. In the :guilabel:`Orfeo Toolbox "
#~ "(image analysis)` block you will find all settings related to OTB. First "
#~ "ensure that algorithms are enabled."
#~ msgstr ""

#~ msgid ""
#~ "``rgdal`` and ``maptools`` libraries are loaded by default so you do not "
#~ "have to add the corresponding ``library()`` commands (you have to make sure,"
#~ " however, that those two packages are installed in your R distribution). "
#~ "However, other additional libraries that you might need have to be "
#~ "explicitly loaded. Just add the necessary commands at the beginning of your "
#~ "script. You also have to make sure that the corresponding packages are "
#~ "installed in the R distribution used by QGIS. The processing framework will "
#~ "not take care of any package installation. If you run a script that requires"
#~ " an uninstalled package, the execution will fail, and SEXTANTE will try to "
#~ "detect which packages are missing. You must install those missing libraries "
#~ "manually before you can run the algorithm."
#~ msgstr ""

#~ msgid ""
#~ "``rgdal`` and ``maptools`` libraries are loaded by default so you do not "
#~ "have to add the corresponding ``library()`` commands (you have to make sure,"
#~ " however, that those two packages are installed in your R distribution). "
#~ "However, other additional libraries that you might need have to be "
#~ "explicitly loaded. Just add the necessary commands at the beginning of your "
#~ "script. You also have to make sure that the corresponding packages are "
#~ "installed in the R distribution used by QGIS. The processing framework will "
#~ "not take care of any package installation. If you run a script that requires"
#~ " an uninstalled package, the execution will fail, and SEXTANTE will try to "
#~ "detect which packages are missing, showing you a dialog like the one shown "
#~ "next"
#~ msgstr ""

#~ msgid ""
#~ "You must install those libraries manually before you can run the algorithm."
#~ msgstr ""
