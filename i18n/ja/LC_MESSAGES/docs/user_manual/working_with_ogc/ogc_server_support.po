# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# 
# Translators:
# Choro <u.ko.kubot@gmail.com>, 2013
# Kayama Yoichi <yoichi.kayama@gmail.com>, 2013-2014
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-26 14:10\n"
"PO-Revision-Date: 2014-07-03 03:49+0000\n"
"Last-Translator: Kayama Yoichi <yoichi.kayama@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/projects/p/qgis-documentation/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 9a1f4a940ea847e4a06bba20dc1f6fe0
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:45
msgid "http://karlinapp.ethz.ch/qgis_wms/"
msgstr "http://karlinapp.ethz.ch/qgis_wms/"

# c69ee36c525d4d6892b5c5603d3f3f67
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:46
msgid "http://hub.qgis.org/projects/quantum-gis/wiki/QGIS_Server_Tutorial"
msgstr "http://hub.qgis.org/projects/quantum-gis/wiki/QGIS_Server_Tutorial"

# 2f46ef3c465e420cb1ca4c239d6c8d71
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:47
msgid ""
"http://linfiniti.com/2010/08/qgis-mapserver-a-wms-server-for-the-masses/"
msgstr "http://linfiniti.com/2010/08/qgis-mapserver-a-wms-server-for-the-masses/"

# 0c9679b88f664ef19133f2009d274593
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:52
msgid "Sample installation on Debian Squeeze"
msgstr "Debian Squeezeのインストールサンプル"

# a8b3d74190274b32b12c4c1810ebc672
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:186
msgid "Fine tuning your OWS"
msgstr "あなたのOWS用ファイル調整"

# 9504424eafe84ba3818042962bc7e21a
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:209
msgid "Extra parameters supported by the WMS GetMap request"
msgstr "WMS GetMapリクエストでサポートされているエキストラパラメータ"

# ec0cc872e3e34e2cb76f2c4360fa6ec6
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:19
msgid "QGIS_Server"
msgstr "QGIS_Server"

# ec0cc872e3e34e2cb76f2c4360fa6ec6
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:19
msgid "FastCGI"
msgstr "FastCGI"

# ec0cc872e3e34e2cb76f2c4360fa6ec6
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:19
msgid "CGI"
msgstr "CGI"

# ec0cc872e3e34e2cb76f2c4360fa6ec6
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:19
msgid "Common_Gateway_Interface"
msgstr "Common_Gateway_Interface"

# 9888cfb64de24850b93c80cea92b7ab3
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:18
msgid "SLD"
msgstr "SLD"

# 9888cfb64de24850b93c80cea92b7ab3
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:18
msgid "SLD/SE"
msgstr "SLD/SE"

# 9dddc22e65af4d90a28dfff5519f671d
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:27
msgid "Publish_to_Web_plugin"
msgstr "Publish_to_Web_plugin"

# e45ceb99afe44a07959de0dc5008cf05
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:49
msgid "apache"
msgstr "apache"

# e45ceb99afe44a07959de0dc5008cf05
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:49
msgid "apache2"
msgstr "apache2"

# e45ceb99afe44a07959de0dc5008cf05
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:49
msgid "Debian_Squeeze"
msgstr "Debian_Squeeze"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:228
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:236
#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:243
msgid "Example::"
msgstr "例::"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:233
msgid ""
"**DPI** parameter: The ``DPI`` parameter can be used to specify the "
"requested output resolution."
msgstr "**DPI** パラメータ:  ``DPI`` パラメータでは要求される出力解像度の指定に使われます."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:240
msgid ""
"**OPACITIES** parameter: Opacity can be set on layer or group level. Allowed"
" values range from 0 (fully transparent) to 255 (fully opaque)."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:10
msgid "|qg| as OGC Data Server"
msgstr "OGC データサーバとしての |qg|"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:79
msgid ""
"Standard WMS with USA boundaries included in the |qg| Server (KDE) |nix|"
msgstr "USA 境界線を含んだ |qg| サーバーの標準WMS(KDE) |nix|"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:221
msgid ""
"**MAP** parameter: Similar to MapServer, the ``MAP`` parameter can be used "
"to specify the path to the |qg| project file. You can specify an absolute "
"path or a path relative to the location of the server executable "
"(:file:`qgis_mapserv.fcgi`). If not specified, |qg| Server searches for .qgs"
" files in the directory where the server executable is located."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:5
msgid "|updatedisclaimer|"
msgstr "|updatedisclaimer|"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:12
msgid ""
"|qg| Server is an open source WMS 1.3, WFS 1.0.0 and WCS 1 1.1.1 "
"implementation that, in addition, implements advanced cartographic features "
"for thematic mapping. The |qg| Server is a FastCGI/CGI (Common Gateway "
"Interface) application written in C++ that works together with a web server "
"(e.g., Apache, Lighttpd). It is funded by the EU projects Orchestra, Sany "
"and the city of Uster in Switzerland."
msgstr "|qg| Serverは、オープンソースWMS1.3とWFS1.0.0の実装だけでなく,それに加え,主題マッピングのための高度な地図作成機能を実装しています. |qg| サーバはwebサーバ（例. Apache, Lighttpd）と一緒に動作するC++で書かれたFastCGI/CGI（Common Gateway Interface）アプリケーションです.これはEUのプロジェクトオーケストラ,Sanyとスイスウスター市が資金提供しています."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:21
msgid ""
"|qg| Server uses |qg| as back end for the GIS logic and for map rendering. "
"Furthermore, the Qt library is used for graphics and for platform-"
"independent C++ programming. In contrast to other WMS software, the |qg| "
"Server uses cartographic rules as a configuration language, both for the "
"server configuration and for the user-defined cartographic rules."
msgstr "|qg| サーバは |qg| をGISロジックと地図レンダリングのバックエンドとして利用しています. さらに Qt ライブラリがグラフィックスとプラットフォームから独立したC++プログラミングに利用されています.  他のWMS ソフトウェアと対比して |qg| サーバはカルトグラフィックルールを構成言語として利用しています, それはサーバ構成とユーザ定義のカルトグラフィックルールの両方です."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:29
msgid ""
"Moreover, the |qg| Server project provides the 'Publish to Web' plugin, a "
"plugin for |qg| desktop that exports the current layers and symbology as a "
"web project for |qg| Server (containing cartographic visualization rules "
"expressed in SLD)."
msgstr "また |qg|  Serverプロジェクトは,現在のレイヤとシンボロジーを |qg| サーバのwebプロジェクト（SLDで表現された地図作成表現ツールを含む）として出力する |qg| デスクトップのためのプラグインである 'Publish to Web' プラグインを提供しています."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:33
msgid ""
"As |qg| desktop and |qg| Server use the same visualization libraries, the "
"maps that are published on the web look the same as in desktop GIS. The "
"'Publish to Web' plugin currently supports basic symbolization, with the "
"option to introduce more complex cartographic visualization rules manually. "
"As the configuration is performed with the `SLD standard "
"<http://www.opengeospatial.org/standards/sld>`_ and its documented "
"extensions, there is only one standardised language to learn, which greatly "
"simplifies the complexity of creating maps for the Web."
msgstr " |qg| デスクトップと |qg| サーバは同じ可視化ライブラリを利用しているので, webに公開されている地図はデスクトップGISと同じに見えます.  'Publish to Web' プラグインは現在基本的なシンボライゼーションをサポートして,さらに複雑なカルトグラフィックビジュアライゼーションはオプションで手動で導入できます. 構成は `SLD standard <http://www.opengeospatial.org/standards/sld>`_ と文書化されている拡張で実行されています ,それらは標準化された言語として学習でき,Webに複雑な地図を発行する作業を簡単にしています."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:41
msgid ""
"In one of the following manuals, we will provide a sample configuration to "
"set up a |qg| Server. For now, we recommend to read one of the following "
"URLs to get more information:"
msgstr "次のマニュアルの１つでは, |qg| サーバをセットアップするための設定のサンプルを提供します.しかし、我々は,詳細を得るために次のURLの１つを読むことをお勧めします："

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:54
msgid ""
"At this point, we will give a short and simple sample installation how-to "
"for Debian Squeeze. Many other OSs provide packages for |qg| Server, too. If"
" you have to build it all from source, please refer to the URLs above."
msgstr "この時点で,Debian SqueezeのためのHowToとなる短くて簡単なサンプル設定を提供します.他の多くのOSが |qg| サーバのためにパッケージを提供しています.もしソースからすべてを構築する必要がある場合は,上記ののURLを参照してください."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:58
msgid ""
"Apart from |qg| and |qg| Server, you need a web server, in our case apache2."
" You can install all packages with ``aptitude`` or ``apt-get install`` "
"together with other necessary dependency packages. After installation, you "
"should test to confirm that the web server and |qg| Server work as expected."
" Make sure the apache server is running with ``/etc/init.d/apache2 start``. "
"Open a web browser and type URL: ``http://localhost``. If apache is up, you "
"should see the message 'It works!'."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:65
msgid ""
"Now we test the |qg| Server installation. The :file:`qgis_mapserv.fcgi` is "
"available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard "
"WMS that shows the state boundaries of Alaska. Add the WMS with the URL "
"``http://localhost/cgi-bin/qgis_mapserv.fcgi`` as described in :ref:`ogc-"
"wms-servers`."
msgstr "ここで |qg| サーバインストレーションのテストをしましょう.  :file:`qgis_mapserv.fcgi` が ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` で使えるはずです,そして標準WMS でAlaskaの州境界線が表示されるはずです.  :ref:`ogc-wms-servers` に記述されているように URL ``http://localhost/cgi-bin/qgis_mapserv.fcgi`` をWMSとして追加して下さい."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:85
msgid "Creating a WMS/WFS/WCS from a |qg| project"
msgstr " |qg| プロジェクトからの WMS/WFS/WCS の作成"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:87
msgid ""
"To provide a new |qg| Server WMS, WFS or WCS, we have to create a |qg| "
"project file with some data. Here, we use the 'Alaska' shapefile from the "
"|qg| sample dataset. Define the colors and styles of the layers in |qg| and "
"the project CRS, if not already defined."
msgstr "新しい |qg| サーバから WMS, WFS または WCSを配信するためには, なんらかのデータを使って |qg| プロジェクトファイルを作らなければいけません.  ここでは |qg| サンプルデータセットの 'Alaska' shapefileを使いましょう. 指定が無い場合は |qg|で色とスタイルとプロジェクトのCRSを指定して下さい."

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:101
msgid "Definitions for a |qg| Server WMS/WFS/WCS project (KDE)"
msgstr " |qg| サーバ WMS/WFS/WCS プロジェクトの定義 (KDE)"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:103
msgid ""
"Then, go to the :guilabel:`OWS Server` menu of the :menuselection:`Project "
"--> Project Properties` dialog and provide some information about the OWS in"
" the fields under :guilabel:`Service Capabilities`. This will appear in the "
"GetCapabilities response of the WMS, WFS or WCS. If you don't check "
"|checkbox| :guilabel:`Service capabilities`, |qg| Server will use the "
"information given in the :file:`wms_metadata.xml` file located in the :file"
":`cgi-bin` folder."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:112
msgid "**WMS capabilities**"
msgstr "**WMS capabilities**"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:114
msgid ""
"In the :guilabel:`WMS capabilities` section, you can define the extent "
"advertised in the WMS GetCapabilities response by entering the minimum and "
"maximum X and Y values in the fields under :guilabel:`Advertised extent`. "
"Clicking :guilabel:`Use Current Canvas Extent` sets these values to the "
"extent currently displayed in the |qg| map canvas. By checking |checkbox| "
":guilabel:`CRS restrictions`, you can restrict in which coordinate reference"
" systems (CRS) |qg| Server will offer to render maps. Use the "
"|mActionSignPlus| button below to select those CRS from the Coordinate "
"Reference System Selector, or click :guilabel:`Used` to add the CRS used in "
"the |qg| project to the list."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:127
msgid ""
"If you have print composers defined in your project, they will be listed in "
"the GetCapabilities response, and they can be used by the GetPrint request "
"to create prints, using one of the print composer layouts as a template. "
"This is a |qg|-specific extension to the WMS 1.3.0 specification. If you "
"want to exclude any print composer from being published by the WMS, check "
"|checkbox| :guilabel:`Exclude composers` and click the |mActionSignPlus| "
"button below. Then, select a print composer from the :guilabel:`Select print"
" composer` dialog in order to add it to the excluded composers list."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:137
msgid ""
"If you want to exclude any layer or layer group from being published by the "
"WMS, check |checkbox| :guilabel:`Exclude Layers` and click the "
"|mActionSignPlus| button below. This opens the :guilabel:`Select restricted "
"layers and groups` dialog, which allows you to choose the layers and groups "
"that you don't want to be published. Use the :kbd:`Shift` or :kbd:`Ctrl` key"
" if you want to select multiple entries at once."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:144
msgid ""
"You can receive requested GetFeatureInfo as plain text, XML and GML. Default"
" is XML, text or GML format depends the output format choosen for the "
"GetFeatureInfo request."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:147
msgid ""
"If you wish, you can check |checkbox| :guilabel:`Add geometry to feature "
"response`. This will include in the GetFeatureInfo response the geometries "
"of the features in a text format. If you want |qg| Server to advertise "
"specific request URLs in the WMS GetCapabilities response, enter the "
"corresponding URL in the :guilabel:`Advertised URL` field. Furthermore, you "
"can restrict the maximum size of the maps returned by the GetMap request by "
"entering the maximum width and height into the respective fields under "
":guilabel:`Maximums for GetMap request`."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:156
msgid "**WFS capabilities**"
msgstr "**WFS capabilities**"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:158
msgid ""
"In the :guilabel:`WFS capabilities` area, you can select the layers that you"
" want to publish as WFS, and specify if they will allow the update, insert "
"and delete operations. If you enter a URL in the :guilabel:`Advertised URL` "
"field of the :guilabel:`WFS capabilities` section, |qg| Server will "
"advertise this specific URL in the WFS GetCapabilities response."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:165
msgid "**WCS capabilities**"
msgstr "**WCS capabilities**"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:167
msgid ""
"In the :guilabel:`WCS capabilities` area, you can select the layers that you"
" want to publish as WCS. If you enter a URL in the :guilabel:`Advertised "
"URL` field of the :guilabel:`WCS capabilities` section, |qg| Server will "
"advertise this specific URL in the WCS GetCapabilities response."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:172
msgid ""
"Now, save the session in a project file :file:`alaska.qgs`. To provide the "
"project as a WMS/WFS, we create a new folder ``/usr/lib/cgi-bin/project`` "
"with admin privileges and add the project file :file:`alaska.qgs` and a copy"
" of the :file:`qgis_mapserv.fcgi` file - that's all."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:177
msgid ""
"Now we test our project WMS, WFS and WCS. Add the WMS, WFS and WCS as "
"described in :ref:`ogc-wms-layers`, :ref:`ogc-wfs` and :ref:`ogc-wcs` to "
"|qg| and load the data. The URL is:"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:188
msgid ""
"For vector layers, the :guilabel:`Fields` menu of the :menuselection:`Layer "
"--> Properties` dialog allows you to define for each attribute if it will be"
" published or not. By default, all the attributes are published by your WMS "
"and WFS. If you want a specific attribute not to be published, uncheck the "
"corresponding checkbox in the :guilabel:`WMS` or :guilabel:`WFS` column."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:195
msgid ""
"You can overlay watermarks over the maps produced by your WMS by adding text"
" annotations or SVG annotations to the project file. See section Annotation "
"Tools in :ref:`general_tools` for instructions on creating annotations. For "
"annotations to be displayed as watermarks on the WMS output, the "
":guilabel:`Fixed map position` check box in the :guilabel:`Annotation text` "
"dialog must be unchecked. This can be accessed by double clicking the "
"annotation while one of the annotation tools is active. For SVG annotations,"
" you will need either to set the project to save absolute paths (in the "
":guilabel:`General` menu of the :menuselection:`Project --> Project "
"Properties` dialog) or to manually modify the path to the SVG image in a way"
" that it represents a valid relative path."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:211
msgid ""
"In the WMS GetMap request, |qg| Server accepts a couple of extra parameters "
"in addition to the standard parameters according to the OCG WMS 1.3.0 "
"specification:"
msgstr ""

#~ msgid ""
#~ "Now save the session in a project file :file:`alaska.qgs`. To provide the "
#~ "project as a WMS/WFS, we create a new folder ``/usr/lib/cgi-bin/project`` "
#~ "with admin privileges and add the project file :file:`alaska.qgs` and a copy"
#~ " of the :file:`qgis_mapserv.fcgi` file - that's all."
#~ msgstr ""

#~ msgid ""
#~ "For vector layers, the :guilabel:`Fields` menu of the :menuselection:`Layer "
#~ "--> Properties` dialog allows you to define for each attribute if it will be"
#~ " published or not. By default all the attributes are published by your WMS "
#~ "and WFS. If you want a specific attribute not to be published, uncheck the "
#~ "corresponding check box in the :guilabel:`WMS` or :guilabel:`WFS` column."
#~ msgstr ""

#~ msgid ""
#~ "You can overlay watermarks over the maps produced by your WMS by adding text"
#~ " annotations or SVG annotations to the project file. See "
#~ ":ref:`sec_annotations` for instructions on creating annotations. For "
#~ "annotations to be displayed as watermarks on the WMS output, the "
#~ ":guilabel:`Fixed map position` check box in the :guilabel:`Annotation text` "
#~ "dialog must be unchecked. This can be accessed by double clicking the "
#~ "annotation while one of the annotation tools is active. For SVG annotations "
#~ "you will either need to set the project to save absolute paths (in the "
#~ ":guilabel:`General` menu of the :menuselection:`Project --> Project "
#~ "Properties` dialog) or to manually modify the path to the SVG image in a way"
#~ " that it represents a valid relative path."
#~ msgstr ""

#~ msgid ""
#~ "If you want to exclude any layer or layer group from being published by the "
#~ "WMS, check |checkbox| :guilabel:`Exclude Layers` and click the "
#~ "|mActionSignPlus| button below. This opens the :guilabel:`Select restricted "
#~ "layers and groups` dialog which allows you to choose the layers and groups "
#~ "that you don't want to be published. Use the shift or control key if you "
#~ "want to select multiple entries at once."
#~ msgstr ""

#~ msgid ""
#~ "|qg| Server is an open source WMS 1.3 and WFS 1.0.0 implementation which, in"
#~ " addition, implements advanced cartographic features for thematic mapping. "
#~ "The |qg| Server is a FastCGI/CGI (Common Gateway Interface) application "
#~ "written in C++ that works together with a webserver (e.g. Apache, Lighttpd)."
#~ " It is funded by the EU projects Orchestra, Sany and the city of Uster in "
#~ "Switzerland."
#~ msgstr ""

#~ msgid ""
#~ "It uses |qg| as backend for the GIS logic and for map rendering. Furthermore"
#~ " the Qt library is used for graphics and for platform independent C++ "
#~ "programming. In contrast to other WMS software, the |qg| Server uses "
#~ "cartographic rules as a configuration language, both for the server "
#~ "configuration and for the user-defined cartographic rules."
#~ msgstr ""

#~ msgid ""
#~ "Moreover, the |qg| Server project provides the 'Publish to Web' plugin, a "
#~ "plugin for |qg| desktop which exports the current layers and symbology as a "
#~ "web project for |qg| Server (containing cartographic visualization rules "
#~ "expressed in SLD)."
#~ msgstr ""

#~ msgid ""
#~ "As |qg| desktop and |qg| Server use the same visualization libraries, the "
#~ "maps that are published on the web look the same as in desktop GIS. The "
#~ "'Publish to Web' plugin currently supports basic symbolization, with more "
#~ "complex cartographic visualization rules introduced manually. As the "
#~ "configuration is performed with the `SLD standard "
#~ "<http://www.opengeospatial.org/standards/sld>`_ and its documented "
#~ "extensions, there is only one standardised language to learn, which greatly "
#~ "simplifies the complexity of creating maps for the Web."
#~ msgstr ""

#~ msgid ""
#~ "In one of the following manuals we will provide a sample configuration to "
#~ "set up a |qg| Server. But for now we recommend to read one of the following "
#~ "URLs to get more information:"
#~ msgstr ""

#~ msgid ""
#~ "At this point we will give a short and simple sample installation howto for "
#~ "Debian Squeeze. Many other OS provide packages for |qg| Server, too. If you "
#~ "have to build it all from source, please refer to the URLs above."
#~ msgstr ""

#~ msgid ""
#~ "Apart from |qg| and |qg| Server you need a webserver, in our case apache2. "
#~ "You can install all packages with aptitude or apt-get install together with "
#~ "other necessary dependency packages. After installation you should test, if "
#~ "the webserver and |qg| Server works as expected. Make sure the apache server"
#~ " is running with ``/etc/init.d/apache2 start``. Open a web browser and type "
#~ "URL: ``http://localhost``. If apache is up, you should see the message 'It "
#~ "works!'."
#~ msgstr ""

#~ msgid ""
#~ "Now we test the |qg| Server installation. The :file:`qgis_mapserv.fcgi` is "
#~ "available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard "
#~ "wms that shows the state boundaries of Alaska. Add the WMS with the URL "
#~ "``http://localhost/cgi-bin/qgis_mapserv.fcgi`` as described in :ref:`ogc-"
#~ "wms-servers`."
#~ msgstr ""

#~ msgid "Creating a WMS/WFS from a |qg| project"
#~ msgstr ""

#~ msgid ""
#~ "To provide a new |qg| Server WMS or WFS we have to create a |qg| project "
#~ "file with some data. Here we use the 'alaska' shapefile from the |qg| sample"
#~ " dataset. Define the colors and styles of the layers in |qg| and define the "
#~ "project CRS, if not already done."
#~ msgstr ""

#~ msgid "Definitions for a |qg| Server WMS/WFS project (KDE)"
#~ msgstr ""

#~ msgid ""
#~ "Then go to the :guilabel:`OWS Server` menu of the :menuselection:`Project "
#~ "--> Project Properties` dialog and give some information about the OWS in "
#~ "the fields under :guilabel:`Service Capabilities`. This will appear in the "
#~ "GetCapabilities response of the WMS or WFS. If you don't check |checkbox| "
#~ ":guilabel:`Service capabilities` |qg| Server will use the information given "
#~ "in the :file:`wms_metadata.xml` file located in the :file:`cgi-bin` folder."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`WMS capabilities` section you can define the extent "
#~ "advertised in the WMS GetCapabilities response by entering the minimum and "
#~ "maximum X and Y values in the fields under :guilabel:`Advertised extent`. "
#~ "Clicking :guilabel:`Use Current Canvas Extent` sets these values to the "
#~ "extent currently displayed in the |qg| map canvas. By checking |checkbox| "
#~ ":guilabel:`CRS restrictions` you can restrict in which coordinate reference "
#~ "systems (CRS) |qg| Server will offer to render maps. Use the "
#~ "|mActionSignPlus| button below to select those CRS from the Coordinate "
#~ "Reference System Selector, or click :guilabel:`Used` to add the CRS used in "
#~ "the |qg| project to the list."
#~ msgstr ""

#~ msgid ""
#~ "If you have print composers defined in your project they will be listed in "
#~ "the GetCapabilities response, and they can be used by the GetPrint request "
#~ "to create prints, using one of the print composer layouts as a template. "
#~ "This is a |qg| specific extension to the WMS 1.3.0 specification. If you "
#~ "want to exclude any print composer from being published by the WMS, check "
#~ "|checkbox| :guilabel:`Exclude composers` and click the |mActionSignPlus| "
#~ "button below. Then select a print composer from the :guilabel:`Select print "
#~ "composer` dialog in order to add it to the excluded composers list."
#~ msgstr ""

#~ msgid ""
#~ "If you wish you can check |checkbox| :guilabel:`Add WKT geometry to feature "
#~ "info response`. This will include in the GetFeatureInfo response the "
#~ "geometries of the features in a text format. If you want |qg| Server to "
#~ "advertise specific request URLs in the WMS GetCapabilities response, enter "
#~ "the corresponding URL in the :guilabel:`Advertised URL` field. Furthermore "
#~ "you can restrict the maximum size of the maps returned by the GetMap request"
#~ " by entering the maximum width and height into the respective fields under "
#~ ":guilabel:`Maximums for GetMap request`."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`WFS capabilities` area you can select the layers that you "
#~ "want to provide as WFS, and specify if they will allow the update, insert "
#~ "and delete operations. If you enter a URL in the :guilabel:`Advertised URL` "
#~ "field of the :guilabel:`WFS capabilities` section, |qg| Server will "
#~ "advertise this specific URL in the WFS GetCapabilities response."
#~ msgstr ""

#~ msgid ""
#~ "Now we test our project WMS and WFS, add the WMS and WFS as described in "
#~ ":ref:`ogc-wms-layers` and :ref:`ogc-wfs` to |qg| and load the WMS. The URL "
#~ "is:"
#~ msgstr ""

#~ msgid ""
#~ "In the WMS GetMap request |qg| Server accepts a couple of extra parameters "
#~ "in addition to the standard parameters according to the OCG WMS 1.3.0 "
#~ "specification:"
#~ msgstr ""

#~ msgid "QGIS Server"
#~ msgstr ""

#~ msgid ""
#~ "QGIS Server is an open source WMS 1.3 and WFS 1.0.0 implementation which, in"
#~ " addition, implements advanced cartographic features for thematic mapping. "
#~ "The QGIS Server is a FastCGI/CGI (Common Gateway Interface) application "
#~ "written in C++ that works together with a webserver (e.g. Apache, Lighttpd)."
#~ " It is funded by the EU projects Orchestra, Sany and the city of Uster in "
#~ "Switzerland."
#~ msgstr ""

#~ msgid ""
#~ "It uses QGIS as backend for the GIS logic and for map rendering. Furthermore"
#~ " the Qt library is used for graphics and for platform independent C++ "
#~ "programming. In contrast to other WMS software, the QGIS Server uses "
#~ "cartographic rules as a configuration language, both for the server "
#~ "configuration and for the user-defined cartographic rules."
#~ msgstr ""

#~ msgid ""
#~ "Moreover, the QGIS Server project provides the 'Publish to Web' plugin, a "
#~ "plugin for QGIS desktop which exports the current layers and symbology as a "
#~ "web project for QGIS Server (containing cartographic visualization rules "
#~ "expressed in SLD)."
#~ msgstr ""

#~ msgid ""
#~ "As QGIS desktop and QGIS Server use the same visualization libraries, the "
#~ "maps that are published on the web look the same as in desktop GIS. The "
#~ "'Publish to Web' plugin currently supports basic symbolization, with more "
#~ "complex cartographic visualization rules introduced manually. As the "
#~ "configuration is performed with the `SLD standard "
#~ "<http://www.opengeospatial.org/standards/sld>`_ and its documented "
#~ "extensions, there is only one standardised language to learn, which greatly "
#~ "simplifies the complexity of creating maps for the Web."
#~ msgstr ""

#~ msgid ""
#~ "In one of the following manuals we will provide a sample configuration to "
#~ "set up a QGIS Server. But for now we recommend to read one of the following "
#~ "URLs to get more information:"
#~ msgstr ""

#~ msgid ""
#~ "At this point we will give a short and simple sample installation howto for "
#~ "Debian Squeeze. Many other OS provide packages for QGIS Server, too. If you "
#~ "have to build it all from source, please refer to the URLs above."
#~ msgstr ""

#~ msgid ""
#~ "Apart from qgis and qgis-mapserver you need a webserver, in our case "
#~ "apache2. You can install all packages with aptitude or apt-get install "
#~ "together with other necessary dependency packages. After installation you "
#~ "should test, if the webserver and qgis server works as expected. Make sure "
#~ "the apache server is running with ``/etc/init.d/apache2 start``. Open a web "
#~ "browser and type URL: ``http://localhost``. If apache is up, you should see "
#~ "the message 'It works!'."
#~ msgstr ""

#~ msgid ""
#~ "Now we test the qgis server installation. The :file:`qgis_mapserv.fcgi` is "
#~ "available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard "
#~ "wms that shows the state boundaries of Alaska. Add the WMS with the URL "
#~ "``http://localhost/cgi-bin/qgis_mapserv.fcgi`` as described in :ref:`ogc-"
#~ "wms-servers`."
#~ msgstr ""

#~ msgid ""
#~ "Standard WMS with USA boundaries included in the qgis server (KDE) |nix|"
#~ msgstr ""

#~ msgid "Creating a WMS/WFS from a QGIS project"
#~ msgstr ""

#~ msgid ""
#~ "Now we test our project WMS and WFS, add the WMS and WFS as described in "
#~ ":ref:`ogc-wms-layers` and :ref:`ogc-wfs` to QGIS and load the WMS. The URL "
#~ "is:"
#~ msgstr ""

#~ msgid ""
#~ "To provide a new QGIS Server WMS or WFS we have to create a QGIS project "
#~ "file with some data. Here we use the 'alaska' shapefile from the QGIS Sample"
#~ " Dataset. Define the colors and styles of the layers in QGIS and define the "
#~ "project CRS, if not already done."
#~ msgstr ""

#~ msgid "Definitions for a QGIS Server WMS/WFS project (KDE)"
#~ msgstr ""

#~ msgid ""
#~ "Then go to the :guilabel:`OWS Server` menu of the :menuselection:`Project "
#~ "--> Project Properties` dialog and give some information about the OWS in "
#~ "the fields under :guilabel:`Service Capabilities`. This will appear in the "
#~ "GetCapabilities response of the WMS or WFS. If you don't check |checkbox| "
#~ ":guilabel:`Service capabilities` QGIS Server will use the information given "
#~ "in the :file:`wms_metadata.xml` file located in the :file:`cgi-bin` folder."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`WMS capabilities` section you can define the extent "
#~ "advertised in the WMS GetCapabilities response by entering the minimum and "
#~ "maximum X and Y values in the fields under :guilabel:`Advertised extent`. "
#~ "Clicking :guilabel:`Use Current Canvas Extent` sets these values to the "
#~ "extent currently displayed in the QGIS map canvas. By checking |checkbox| "
#~ ":guilabel:`CRS restrictions` you can restrict in which coordinate reference "
#~ "systems (CRS) QGIS Server will offer to render maps. Use the "
#~ "|mActionSignPlus| button below to select those CRS from the Coordinate "
#~ "Reference System Selector, or click :guilabel:`Used` to add the CRS used in "
#~ "the QGIS project to the list."
#~ msgstr ""

#~ msgid ""
#~ "If you have print composers defined in your project they will be listed in "
#~ "the GetCapabilities response, and they can be used by the GetPrint request "
#~ "to create prints, using one of the print composer layouts as a template. "
#~ "This is a QGIS specific extension to the WMS 1.3.0 specification. If you "
#~ "want to exclude any print composer from being published by the WMS, check "
#~ "|checkbox| :guilabel:`Exclude composers` and click the |mActionSignPlus| "
#~ "button below. Then select a print composer from the :guilabel:`Select print "
#~ "composer` dialog in order to add it to the excluded composers list."
#~ msgstr ""

#~ msgid ""
#~ "If you wish you can check |checkbox| :guilabel:`Add WKT geometry to feature "
#~ "info response`. This will include in the GetFeatureInfo response the "
#~ "geometries of the features in a text format. If you want QGIS Server to "
#~ "advertise specific request URLs in the WMS GetCapabilities response, enter "
#~ "the corresponding URL in the :guilabel:`Advertised URL` field. Furthermore "
#~ "you can restrict the maximum size of the maps returned by the GetMap request"
#~ " by entering the maximum width and height into the respective fields under "
#~ ":guilabel:`Maximums for GetMap request`."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`WFS capabilities` area you can select the layers that you "
#~ "want to provide as WFS, and specify if they will allow the update, insert "
#~ "and delete operations. If you enter a URL in the :guilabel:`Advertised URL` "
#~ "field of the :guilabel:`WFS capabilities` section, QGIS Server will "
#~ "advertise this specific URL in the WFS GetCapabilities response."
#~ msgstr ""

#~ msgid ""
#~ "In the WMS GetMap request QGIS Server accepts a couple of extra parameters "
#~ "in addition to the standard parameters according to the OCG WMS 1.3.0 "
#~ "specification:"
#~ msgstr ""

#~ msgid ""
#~ "**MAP** parameter: Similar to MapServer, the ``MAP`` parameter can be used "
#~ "to specify the path to the QGIS project file. You can specify an absolute "
#~ "path or a path relative to the location of the server executable "
#~ "(:file:`qgis_mapserv.fcgi`). If not specified, QGIS Server searches for .qgs"
#~ " files in the directory where the server executable is located."
#~ msgstr ""

#~ msgid ""
#~ "To provide a new qgis wms/wfs server we have to create a qgis project file "
#~ "with some data. Here we use the 'alaska' shapefile from the "
#~ "qgis_sample_dataset. Define the colors and styles of the layers in QGIS and "
#~ "define the project CRS, if not already done."
#~ msgstr ""

#~ msgid "Definitions for a qgis project WMS/WFS server (KDE)"
#~ msgstr ""

#~ msgid ""
#~ "Then open the ``OWS Server`` tab in the menu :menuselection:`Settings --> "
#~ "Project Properties` and define the general fields under 'Service "
#~ "Capabilities'. For ``WMS Capabilities`` define 'Coordinate System "
#~ "Restrictions' and 'Advertised Extend'. If you want to exclude any layer or "
#~ "layer group from being published by the OWS, check |checkbox| "
#~ ":guilabel:`Exclude Layers` and click the |mActionSignPlus| button below. "
#~ "This opens the :guilabel:`Select restricted layers and groups` dialog which "
#~ "allows you to choose the layers and groups that you don't want to be "
#~ "published. Use the shift or control key if you want to select multiple "
#~ "entries at once. If you wish you can check |checkbox| :guilabel:`Add WKT "
#~ "geometry to feature info response`. This will include in the GetFeatureInfo "
#~ "response the geometries of the features in a text format. If you want QGIS "
#~ "Server to advertise specific request URLs in the WMS GetCapabilities "
#~ "response, enter the corresponding URL in the :guilabel:`Advertised URL` "
#~ "field. Furthermore you can restrict the maximum size of the maps returned by"
#~ " the GetMap request by entering the maximum width and height into the "
#~ "respective fields under :guilabel:`Maximums for GetMap request`. In the "
#~ ":guilabel:`WFS capabilities` area you can select the layers that you want to"
#~ " provide as WFS, and specify if they will allow the update, insert and "
#~ "delete operations. If you enter a URL in the :guilabel:`Advertised URL` "
#~ "field of the :guilabel:`WFS capabilities` section, QGIS Server will "
#~ "advertise this specific URL in the WFS GetCapabilities response."
#~ msgstr ""

#~ msgid ""
#~ "Concerning the WMS GetMap request, QGIS Server accepts a couple of extra "
#~ "parameters in addition to the standard parameters according to the OCG WMS "
#~ "1.3 specification:"
#~ msgstr ""

#~ msgid ""
#~ "**MAP** parameter: Similar to MapServer, the ``MAP`` parameter can be used "
#~ "to specify the path to the QGIS project file. You can specify an absolute "
#~ "path or a path relative to the location of the server executable "
#~ "(qgis_mapserv.fcgi). If not specified, QGIS Server searches for .qgs files "
#~ "in the directory where the server executable is located. Example: "
#~ "``http://localhost/cgi-"
#~ "bin/qgis_mapserv.fcgi?REQUEST=GetMap&MAP=/home/qgis/mymap.qgs&...``"
#~ msgstr ""

#~ msgid ""
#~ "**DPI** parameter: The ``DPI`` parameter can be used to specify the "
#~ "requested output resolution. Example: ``http://localhost/cgi-"
#~ "bin/qgis_mapserv.fcgi?REQUEST=GetMap&DPI=300&...``"
#~ msgstr ""

#~ msgid ""
#~ "**OPACITIES** parameter: Opacity can be set on layer or group level. Allowed"
#~ " values range from 0 (fully transparent) to 255 (fully opaque). Example: "
#~ "``http://localhost/cgi-"
#~ "bin/qgis_mapserv.fcgi?REQUEST=GetMap&LAYERS=mylayer1,mylayer2&OPACITIES=125,200&...``"
#~ msgstr ""
